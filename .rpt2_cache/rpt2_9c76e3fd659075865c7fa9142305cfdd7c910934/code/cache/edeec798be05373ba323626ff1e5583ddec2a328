{
  "code": "import Subway from \"./Subway\";\r\nvar Direction;\r\n(function (Direction) {\r\n    Direction[Direction[\"up\"] = 0] = \"up\";\r\n    Direction[Direction[\"down\"] = 1] = \"down\";\r\n    Direction[Direction[\"left\"] = 2] = \"left\";\r\n    Direction[Direction[\"right\"] = 3] = \"right\";\r\n    Direction[Direction[\"pause\"] = 4] = \"pause\";\r\n})(Direction || (Direction = {}));\r\n;\r\nexport default class Test extends Laya.Script {\r\n    constructor() {\r\n        super();\r\n        this.pxs = 3;\r\n    }\r\n    onEnable() {\r\n        console.log(\"Game Start!\");\r\n        this.score = 0;\r\n        this.moveI = 0;\r\n        this.scoreText = this.owner.getChildByName(\"scoreText\");\r\n        this.background = this.owner.getChildByName(\"bgimg\");\r\n        this.subwayImg = this.owner.getChildByName(\"subway\");\r\n        this.subway = new Subway(1);\r\n        this.bgx = this.background.x;\r\n        this.bgy = this.background.y;\r\n        this.roadWidth = this.subway.getRoadWidth();\r\n    }\r\n    onUpdate() {\r\n        this.scoreText.set_text(String(this.score++));\r\n        if (this.direction != Direction.pause) {\r\n            this.direction = this.subway.getDirection(this.moveI);\r\n            this.move();\r\n            this.isDied();\r\n        }\r\n    }\r\n    onLateUpdate() {\r\n    }\r\n    onClick() {\r\n        this.moveI++;\r\n        console.log(\"用户第\" + this.moveI + \"次点击\");\r\n    }\r\n    isDied() {\r\n        if (this.moveI == 0) {\r\n            let turnXY = this.subway.getTurnXY(1);\r\n            if (this.bgy > turnXY[1] + this.roadWidth) {\r\n                this.stopGame();\r\n            }\r\n        }\r\n        else if (this.moveI == this.subway.getTurnNum() - 1) {\r\n            let turnXY = this.subway.getTurnXY(this.subway.getTurnNum() - 1);\r\n            if (this.bgx < turnXY[0] - this.roadWidth || this.bgx > turnXY[0] + this.roadWidth) {\r\n                this.stopGame();\r\n            }\r\n        }\r\n        else {\r\n            let turnXY = this.subway.getTurnXY(this.moveI);\r\n            let turnXYPre = this.subway.getTurnXY(this.moveI - 1);\r\n            let turnXYNext = this.subway.getTurnXY(this.moveI + 1);\r\n            if (this.direction == Direction.up) {\r\n                if (this.isInH(turnXY[0], turnXYPre[0], turnXY[1]) || this.isInV(turnXYNext[0], turnXYNext[1])) {\r\n                }\r\n                else {\r\n                    this.stopGame();\r\n                }\r\n            }\r\n            else {\r\n                if (this.isInV(turnXY[0], turnXY[1]) || this.isInH(turnXY[0], turnXYNext[0], turnXY[1])) {\r\n                }\r\n                else {\r\n                    this.stopGame();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    stopGame() {\r\n        this.direction = Direction.pause;\r\n        let overText = this.owner.getChildByName(\"overText\");\r\n        overText.set_visible(true);\r\n        console.log(\"game over!\");\r\n    }\r\n    move() {\r\n        let speed = this.subway.getSpeed();\r\n        switch (this.direction) {\r\n            case Direction.up:\r\n                this.bgy += (speed * this.pxs);\r\n                break;\r\n            case Direction.left:\r\n                this.bgx += (speed * this.pxs);\r\n                break;\r\n            case Direction.right:\r\n                this.bgx -= (speed * this.pxs);\r\n                break;\r\n            default:\r\n                console.log(\"move error\");\r\n                break;\r\n        }\r\n        this.background.pos(this.bgx, this.bgy);\r\n    }\r\n    isInH(x1, x2, y) {\r\n        let xMax = x1;\r\n        let xMin = x2;\r\n        if (x1 < x2) {\r\n            xMax = x2;\r\n            xMin = x1;\r\n        }\r\n        if (this.bgy < y - this.roadWidth || this.bgy > y + this.roadWidth\r\n            || this.bgx < xMin - this.roadWidth || this.bgx > xMax + this.roadWidth) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    isInV(x, y) {\r\n        if (this.bgx < x - this.roadWidth || this.bgx > x + this.roadWidth\r\n            || this.bgy > y + this.roadWidth) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n",
  "references": [
    "C:/Code/LayaGame/Parkour/src/script/Subway.ts"
  ]
}
